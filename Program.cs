using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
 
namespace HelloWorld
{
    public class Program
    {
        public static void Main(string[] args)
        {
            string randomLet = ConvertToString
            string[] stringBinary = new string[] { "01001000", "01100101", "01101100", "01101100", "01101111", "00101100", "00100000", "01010111", "01101111", "01110010", "01101100", "01100100", "00100001" };
            List<char> letterHW = new List<char> { };
            List<char> stringHW = new List<char> { };
            for(int a = 0; a < 13; a++)
            {
                letterHW.Add(Convert.ToChar(ConvertToString(stringBinary[a])));
            }
           
            foreach(char i in randomLet)
            {
                for (int e = 0; e < letterHW.Count; e++)
                {
                    if (i.Equals(letterHW[e]))
                    {
                        stringHW.Add(i);
                    }
                }
            }
            var noDupes = stringHW.Distinct().ToList();
            noDupes.Insert(3, letterHW[2]);
            noDupes.Insert(8, letterHW[4]);
            noDupes.Insert(10, letterHW[3]);
            var qwerty = new string(noDupes.ToArray());
            Console.WriteLine(qwerty);
        }
 
        public static string ConvertToString(string binaryNum)
        {
            List<Byte> helloList = new List<Byte>();
 
            for (int i = 0; i < binaryNum.Length; i += 8)
            {
                helloList.Add(Convert.ToByte(binaryNum.Substring(i, 8), 2));
            }
            return Encoding.ASCII.GetString(helloList.ToArray());
        }
    }
}
